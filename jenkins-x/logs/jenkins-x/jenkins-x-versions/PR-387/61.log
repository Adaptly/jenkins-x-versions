Step: build-step-credential-initializer-2c9t5:

{"level":"warn","ts":1565292306.7533364,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/master\" is not a valid GitHub commit ID"}
{"level":"info","ts":1565292306.7537549,"logger":"fallback-logger","caller":"creds-init/main.go:40","msg":"Credentials initialized."}
Step: build-step-working-dir-initializer-x6nq6:

{"level":"warn","ts":1565292307.7297323,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: open /var/run/ko/HEAD: no such file or directory"}
{"level":"info","ts":1565292307.7310731,"logger":"fallback-logger","caller":"bash/main.go:65","msg":"Successfully executed command \"mkdir -p /workspace/source\""}
Step: build-step-place-tools:

Step: build-step-git-source-jenkins-x-jenkins-x-versions-pr-chp9q:

{"level":"warn","ts":1565292309.7662692,"logger":"fallback-logger","caller":"logging/config.go:65","msg":"Fetch GitHub commit ID from kodata failed: \"ref: refs/heads/master\" is not a valid GitHub commit ID"}
{"level":"info","ts":1565292311.2232046,"logger":"fallback-logger","caller":"git/git.go:102","msg":"Successfully cloned https://github.com/jenkins-x/jenkins-x-versions @ e397fc1520b958e99b2c050f2244a77ef1f68cde in path /workspace/source"}
Step: build-step-git-merge:

Warning failed to load version: failed to parse version -dev+9e73adc0b: No Major.Minor.Patch elements found
time="2019-08-08T19:25:12Z" level=info msg="got "
Using SHAs from PULL_REFS=master:8204db3369a083dc5bb5f6eafb4aeb78a0cb2b03,387:e397fc1520b958e99b2c050f2244a77ef1f68cde
ran git fetch --unshallow origin e397fc1520b958e99b2c050f2244a77ef1f68cde: 8204db3369a083dc5bb5f6eafb4aeb78a0cb2b03: in 
ran git checkout master in 
ran git reset --hard 8204db3369a083dc5bb5f6eafb4aeb78a0cb2b03 in 
ran clean --force -d . in 
ran git merge e397fc1520b958e99b2c050f2244a77ef1f68cde in 
Step: build-step-runci:

+ export GH_USERNAME=****
+ GH_USERNAME=****
++ ** step credential -s **-pipeline-git-github-ghe
+ export GH_CREDS_PSW=****************************************
+ GH_CREDS_PSW=****************************************
++ ** step credential -s test-jenkins-user
+ export JENKINS_CREDS_PSW=************
+ JENKINS_CREDS_PSW=************
++ ** step credential -k bdd-credentials.json -s bdd-secret -f sa.json
+ export GKE_SA=sa.json
+ GKE_SA=sa.json
+ export BUILD_NUMBER=
+ BUILD_NUMBER=
+ JX_HOME=/tmp/**home
+ KUBECONFIG=/tmp/**home/config
+ mkdir -p /tmp/**home
+ ** --version
2.0.574
+ ** step git credentials
Generated Git credentials file /builder/home/git/credentials
+ gcloud auth activate-service-account --key-file sa.json
Activated service account credentials for: [*************@*************2.iam.gserviceaccount.com]
+ git config --global --add user.name JenkinsXBot
+ git config --global --add user.email jenkins-x@googlegroups.com
+ echo 'running the BDD tests with JX_HOME = /tmp/**home'
+ export JX_VALUE_ADMINUSER_PASSWORD=************
+ JX_VALUE_ADMINUSER_PASSWORD=************
+ export JX_VALUE_PIPELINEUSER_USERNAME=****
+ JX_VALUE_PIPELINEUSER_USERNAME=****
+ export JX_VALUE_PIPELINEUSER_TOKEN=****************************************
+ JX_VALUE_PIPELINEUSER_TOKEN=****************************************
+ export JX_VALUE_PROW_HMACTOKEN=****************************************
+ JX_VALUE_PROW_HMACTOKEN=****************************************
running the BDD tests with JX_HOME = /tmp/**home
+ export JX_BATCH_MODE=true
+ JX_BATCH_MODE=true
+ git clone https://github.com/jenkins-x/jenkins-x-boot-config.git boot-source
Cloning into 'boot-source'...
+ cp **/bdd/boot-lh-ghe/**-requirements.yml boot-source
+ cp **/bdd/boot-lh-ghe/parameters.yaml boot-source/env
+ cd boot-source
+ helm init --client-only
Creating /builder/home/.helm 
Creating /builder/home/.helm/repository 
Creating /builder/home/.helm/repository/cache 
Creating /builder/home/.helm/repository/local 
Creating /builder/home/.helm/plugins 
Creating /builder/home/.helm/starters 
Creating /builder/home/.helm/cache/archive 
Creating /builder/home/.helm/repository/repositories.yaml 
Adding stable repo with URL: https://kubernetes-charts.storage.googleapis.com 
Adding local repo with URL: http://127.0.0.1:8879/charts 
$HELM_HOME has been configured at /builder/home/.helm.
Not installing Tiller due to 'client-only' flag having been set
+ helm repo add jenkins-x https://storage.googleapis.com/chartmuseum.jenkins-x.io
"jenkins-x" has been added to your repositories
+ ** step bdd --use-revision --version-repo-pr --versions-repo https://github.com/jenkins-x/jenkins-x-versions.git --config ../**/bdd/boot-lh-ghe/cluster.yaml --gopath /tmp --git-provider=github --git-provider-url https://github.beescloud.com --git-username **** --git-api-token **************************************** --default-*****-password ************ --no-delete-app --no-delete-repo --tests install --tests test-create-spring
has 1 post create cluster commands
post create command: ** boot -b
found git revision e397fc1520b958e99b2c050f2244a77ef1f68cde: branch PR-387
using versions git repo https://github.com/jenkins-x/jenkins-x-versions.git and ref e397fc1520b958e99b2c050f2244a77ef1f68cde

Creating cluster pr-387-61-bdd-boot-lh-ghe
setting the **-requirements.yml version stream ref to: e397fc1520b958e99b2c050f2244a77ef1f68cde
wrote file **-requirements.yml after setting the cluster name to pr-387-61-bdd-boot-lh-ghe
**-requirements.yml is:
cluster:
  clusterName: pr-387-61-bdd-boot-lh-ghe
  environmentGitOwner: ****
  gitKind: github
  gitName: ghe
  gitServer: https://github.beescloud.com
  namespace: **
  project: *************2
  provider: gke
  zone: europe-west1-c
environments:
- key: dev
- gitKind: github
  gitServer: https://github.com
  key: staging
  owner: ****
  repository: environment-pr-387-61-bdd-boot-lh-ghe-staging
- gitKind: github
  gitServer: https://github.com
  key: production
  owner: ****
  repository: environment-pr-387-61-bdd-boot-lh-ghe-production
ingress:
  domain: ""
  externalDNS: false
  namespaceSubDomain: -**.
  tls:
    email: ""
    enabled: false
    production: false
kaniko: true
secretStorage: local
storage:
  logs:
    enabled: true
    url: gs://**-bdd-log-store
  reports:
    enabled: true
    url: gs://**-bdd-log-store
  repository:
    enabled: true
    url: gs://**-bdd-repo
versionStream:
  ref: e397fc1520b958e99b2c050f2244a77ef1f68cde
  url: https://github.com/jenkins-x/jenkins-x-versions.git
webhook: lighthouse


WARNING: could not find a stable version from charts of jenkins-x/jenkins-x-platform from 
For background see: https://jenkins-x.io/architecture/version-stream/
Please lock this version down via the command: ** step create version pr -k charts -n jenkins-x/jenkins-x-platform
loaded version  from Makefile in directory 
running command: ** create cluster gke --project-id=*************2 -m=n1-standard-2 --min-num-nodes=3 --max-num-nodes=5 -z=europe-west1-c --skip-login --skip-installation --cluster-name pr-387-61-bdd-boot-lh-ghe --batch-mode --labels cluster=bdd-boot-lh-ghe,branch=pr-387 --git-provider-url https://github.beescloud.com --versions-repo https://github.com/jenkins-x/jenkins-x-versions.git --versions-ref e397fc1520b958e99b2c050f2244a77ef1f68cde --git-username **** --git-api-token **************¬ --default-*****-password **************¬
? Configured project id: *************2
Updated property [core/project].
? Configured cluster name: pr-387-61-bdd-boot-lh-ghe
? Configured to machine type: n1-standard-2
? Configured to minimum number of nodes: 3
? Configured to maximum number of nodes: 5
Creating cluster...
WARNING: In June 2019, node auto-upgrade will be enabled by default for newly created clusters and node pools. To disable it, use the `--no-enable-autoupgrade` flag.
WARNING: Starting in 1.12, new clusters will have basic authentication disabled by default. Basic authentication can be enabled (or disabled) manually using the `--[no-]enable-basic-auth` flag.
WARNING: Starting in 1.12, new clusters will not have a client certificate issued. You can manually enable (or disable) the issuance of the client certificate using the `--[no-]issue-client-certificate` flag.
WARNING: Currently VPC-native is not the default mode during cluster creation. In the future, this will become the default mode and can be disabled using `--no-enable-ip-alias` flag. Use `--[no-]enable-ip-alias` flag to suppress this warning.
WARNING: Starting in 1.12, default node pools in new clusters will have their legacy Compute Engine instance metadata endpoints disabled by default. To create a cluster with legacy instance metadata endpoints disabled in the default node pool, run `clusters create` with the flag `--metadata disable-legacy-endpoints=true`.
WARNING: Your Pod address range (`--cluster-ipv4-cidr`) can accommodate at most 1008 node(s). 
This will enable the autorepair feature for nodes. Please see https://cloud.google.com/kubernetes-engine/docs/node-auto-repair for more information on node autorepairs.
Creating cluster pr-387-61-bdd-boot-lh-ghe in europe-west1-c...
done.
Created [https://container.googleapis.com/v1/projects/*************2/zones/europe-west1-c/clusters/pr-387-61-bdd-boot-lh-ghe].
To inspect the contents of your cluster, go to: https://console.cloud.google.com/kubernetes/workload_/gcloud/europe-west1-c/pr-387-61-bdd-boot-lh-ghe?project=*************2
kubeconfig entry generated for pr-387-61-bdd-boot-lh-ghe.
NAME                       LOCATION        MASTER_VERSION  MASTER_IP     MACHINE_TYPE   NODE_VERSION   NUM_NODES  STATUS
pr-387-61-bdd-boot-lh-ghe  europe-west1-c  1.12.8-gke.10   35.233.36.91  n1-standard-2  1.12.8-gke.10  3          RUNNING
Initialising cluster ...
gke cluster created. Skipping Jenkins X installation.
Fetching cluster endpoint and auth data.
kubeconfig entry generated for pr-387-61-bdd-boot-lh-ghe.
Context "gke_*************2_europe-west1-c_pr-387-61-bdd-boot-lh-ghe" modified.
No resources found.
running command: ** boot -b
booting up Jenkins X
Deleting and cloning the Jenkins X versions repo
Cloning the Jenkins X versions repo https://github.com/jenkins-x/jenkins-x-versions.git with revision e397fc1520b958e99b2c050f2244a77ef1f68cde to /builder/home/.**/jenkins-x-versions
From https://github.com/jenkins-x/jenkins-x-versions
 * branch            e397fc1520b958e99b2c050f2244a77ef1f68cde -> FETCH_HEAD

STEP: validate-git command: /bin/sh -c ** step git validate in dir: env

Git configured for user: JenkinsXBot and email jenkins-x@googlegroups.com

STEP: verify-preinstall command: /bin/sh -c ** step verify preinstall in dir: env

Connecting to cluster pr-387-61-bdd-boot-lh-ghe
Will create public environment repos, if you want to create private environment repos, please set environmentGitPrivate to true **-requirements.yaml
verifying the kubernetes cluster before we try to boot Jenkins X in namespace: **
we will try to lazily create any missing resources to get the current cluster ready to boot Jenkins X
attempting to lazily create the deploy namespace **
Namespace ** created 
setting the local kubernetes context to the deploy namespace **
Using namespace '**' from context named 'gke_*************2_europe-west1-c_pr-387-61-bdd-boot-lh-ghe' on server 'https://35.233.36.91'.
verifying the CLI packages
verifying the CLI package using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: e397fc1520b958e99b2c050f2244a77ef1f68cde
Deleting and cloning the Jenkins X versions repo
Cloning the Jenkins X versions repo https://github.com/jenkins-x/jenkins-x-versions.git with revision e397fc1520b958e99b2c050f2244a77ef1f68cde to /builder/home/.**/jenkins-x-versions
From https://github.com/jenkins-x/jenkins-x-versions
 * branch            e397fc1520b958e99b2c050f2244a77ef1f68cde -> FETCH_HEAD
the CLI packages seem to be setup correctly
NAME               VERSION
**                 2.0.574
Kubernetes cluster v1.12.8-gke.10
kubectl            v1.15.0
helm client        v2.14.1+g5270352
git                2.21.0
the storage looks good
helm installed and configured
helm client is setup
ensure we have the helm repository https://storage.googleapis.com/chartmuseum.jenkins-x.io
validating the kaniko secret in namespace **
attempting to lazily create the deploy namespace **
Configuring Kaniko service account pr-387-61-bdd-boot-lh-ghe-ko for project *************2
Unable to find service account pr-387-61-bdd-boot-lh-ghe-ko, checking if we have enough permission to create
Creating service account pr-387-61-bdd-boot-lh-ghe-ko
Assigning role roles/storage.*****
Assigning role roles/storage.objectAdmin
Assigning role roles/storage.objectCreator
Downloading service account key
created kaniko Secret: kaniko-secret in namespace: **
valid: there is a Secret: kaniko-secret in namespace: **
verified there is a ConfigMap config in namespace **
verified there is a ConfigMap plugins in namespace **
the cluster looks good, you are ready to '** boot' now!


STEP: **-crds command: /bin/sh -c ** upgrade crd in dir: .

Jenkins X CRDs upgraded with success

STEP: kube-system command: /bin/sh -c ** step helm apply --boot --remote --no-vault --name **ing in dir: systems/**ing

Modified file /workspace/source/boot-source/systems/**ing/Chart.yaml to set the chart to version 1
Copying the helm source directory /workspace/source/boot-source/systems/**ing to a temporary location for building and applying /tmp/**-helm-apply-621093958/**ing
Applying helm chart at /tmp/**-helm-apply-621093958/**ing as release name **ing to namespace kube-system
WARNING: failed to create system vault in namespace ** due to no "**-vault-pr-387-61-bdd" vault found in namespace "**"
verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: e397fc1520b958e99b2c050f2244a77ef1f68cde
Deleting and cloning the Jenkins X versions repo
Cloning the Jenkins X versions repo https://github.com/jenkins-x/jenkins-x-versions.git with revision e397fc1520b958e99b2c050f2244a77ef1f68cde to /builder/home/.**/jenkins-x-versions
From https://github.com/jenkins-x/jenkins-x-versions
 * branch            e397fc1520b958e99b2c050f2244a77ef1f68cde -> FETCH_HEAD
Wrote chart values.yaml /tmp/**-helm-apply-621093958/**ing/values.yaml generated from directory tree
generated helm /tmp/**-helm-apply-621093958/**ing/values.yaml

nginx-ingress:
  controller:
    extraArgs:
      publish-service: kube-system/**ing-nginx-ingress-controller
    service:
      omitClusterIP: true
  defaultBackend:
    service:
      omitClusterIP: true
  rbac:
    create: true

Using values files: /tmp/**-helm-apply-621093958/**ing/values.yaml
verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: e397fc1520b958e99b2c050f2244a77ef1f68cde
adding version 1.11.4 to dependency nginx-ingress in file /tmp/**-helm-apply-621093958/**ing/requirements.yaml
adding dependency versions to file /tmp/**-helm-apply-621093958/**ing/requirements.yaml
Applying Apps chart overrides
Applying chart overrides


STEP: helm-cluster-values command: /bin/sh -c ** step create install values -b in dir: env


Waiting to find the external host name of the ingress controller Service in namespace kube-system with name **ing-nginx-ingress-controller
No domain flag provided so using default  to generate Ingress rules
waiting for external Host on the ingress service **ing-nginx-ingress-controller in namespace kube-system ...

Waiting to find the external host name of the ingress controller Service in namespace kube-system with name **ing-nginx-ingress-controller
No domain flag provided so using default 34.76.4.101.nip.io to generate Ingress rules
defaulting the domain to 34.76.4.101.nip.io and modified /workspace/source/boot-source/**-requirements.yml
Disabling using external-dns as it currently only works on GKE and not nip.io domains

STEP: install-vault command: /bin/sh -c ** step boot vault in dir: systems/vault

not attempting to boot Vault as using secret storage: local

STEP: cert-manager-crds command: /bin/sh -c kubectl apply --wait --validate=true -f https://raw.githubusercontent.com/jetstack/cert-manager/release-0.8/deploy/manifests/00-crds.yaml in dir: .

customresourcedefinition.apiextensions.k8s.io/certificates.certmanager.k8s.io created
customresourcedefinition.apiextensions.k8s.io/challenges.certmanager.k8s.io created
customresourcedefinition.apiextensions.k8s.io/clusterissuers.certmanager.k8s.io created
customresourcedefinition.apiextensions.k8s.io/issuers.certmanager.k8s.io created
customresourcedefinition.apiextensions.k8s.io/orders.certmanager.k8s.io created

STEP: cert-manager command: /bin/sh -c ** step helm apply --boot --remote --no-vault --name ** in dir: systems/cm

Modified file /workspace/source/boot-source/systems/cm/Chart.yaml to set the chart to version 1
Namespace cert-manager created 
Copying the helm source directory /workspace/source/boot-source/systems/cm to a temporary location for building and applying /tmp/**-helm-apply-059643359/cm
Applying helm chart at /tmp/**-helm-apply-059643359/cm as release name ** to namespace cert-manager
WARNING: failed to create system vault in namespace ** due to no "**-vault-pr-387-61-bdd" vault found in namespace "**"
verifying the helm requirements versions in dir: . using version stream URL: https://github.com/jenkins-x/jenkins-x-versions.git and git ref: e397fc1520b958e99b2c050f2244a77ef1f68cde
Deleting and cloning the Jenkins X versions repo
Cloning the Jenkins X versions repo https://github.com/jenkins-x/jenkins-x-versions.git with revision e397fc1520b958e99b2c050f2244a77ef1f68cde to /builder/home/.**/jenkins-x-versions
error: Server does not allow request for unadvertised object e397fc1520b958e99b2c050f2244a77ef1f68cde
ERROR: Error: Command failed  git fetch origin e397fc1520b958e99b2c050f2244a77ef1f68cde
error: failed to create version resolver: failed to git fetch origin e397fc1520b958e99b2c050f2244a77ef1f68cde for repo: https://github.com/jenkins-x/jenkins-x-versions.git in dir /builder/home/.**/jenkins-x-versions: exit status 128
error: failed to interpret pipeline file jenkins-x.yml: failed to run '/bin/sh -c ** step helm apply --boot --remote --no-vault --name **' command in directory 'systems/cm', output: ''
ERROR: Error: Command failed  ** boot -b
error: exit status 1
